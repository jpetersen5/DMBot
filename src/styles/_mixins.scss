@use "sass:map";

$sidebar-width: 44px;
$sidebar-width-expanded: 200px;

$screen-mobile-max: 768px;
$screen-tablet-max: 1200px;

@mixin scrollbar($size: 8px) {
  &::-webkit-scrollbar {
    width: $size;
    height: $size;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    border-radius: calc($size / 2);
    @include theme("background", "color-table-header");

    &:hover {
      @include theme("background", "color-table-background-1");
    }
  }
}

@mixin mobile {
  @media (max-width: #{$screen-mobile-max - 1}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$screen-mobile-max}) and (max-width: #{$screen-tablet-max - 1}) {
    @content;
  }
}

@mixin tabletplus {
  @media (min-width: #{$screen-mobile-max}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$screen-tablet-max}) {
    @content;
  }
}

@mixin theme($key, $color) {
  @if global-variable-exists(themes) {
    @each $theme-name, $theme-map in $themes {
        .theme-#{$theme-name} & {
            #{$key}: map.get($theme-map, $color);
        }
    }
  } @else {
    @warn "Variable $themes is not defined. The 'theme' mixin will not apply styles.";
  }
}

@mixin master-theme($key, $color) {
   @if global-variable-exists(themes) {
    @each $theme-name, $theme-map in $themes {
        .theme-#{$theme-name} {
            #{$key}: map.get($theme-map, $color);
        }
    }
  } @else {
    @warn "Variable $themes is not defined. The 'master-theme' mixin will not apply styles.";
  }
}